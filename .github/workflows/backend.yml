name: Backend CI/CD - GCP

on:
  push:
    branches: [ main ]
    paths:
      - 'bknd/**'
      - '.github/workflows/backend.yml'

env:
  PROJECT_ID: ${{ vars.GCP_PROJECT_ID }}
  REGION: ${{ vars.GCP_REGION }}
  AR_REPO: ${{ vars.ARTIFACT_REGISTRY_REPO || 'stocks-backend' }}
  SERVICE: backend-service-java-2
  IMAGE_NAME: backend-java-2

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    defaults:
      run:
        shell: bash
        working-directory: bknd  

    steps:
      - uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - name: Auth to GCP (WIF)
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WIF_PROVIDER }}
          service_account: ${{ secrets.GCP_SA_EMAIL }}

      - uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker to Artifact Registry
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet
        working-directory: .

      - name: Give execute permissions to mvnw
        run: chmod +x mvnw

      - name: Build jar with Maven
        run: ./mvnw clean package -DskipTests

      - name: Build & Push Docker image
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          IMAGE_URI="${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.AR_REPO }}/${{ env.IMAGE_NAME }}:${IMAGE_TAG}"
          
          echo "üî® Building Docker image..."
          docker build -t "$IMAGE_URI" .
          
          echo "üì¶ Pushing image..."
          docker push "$IMAGE_URI"
          
          # Obtener digest para deploy inmutable
          DIGEST=$(gcloud artifacts docker images describe "$IMAGE_URI" --format='value(image_summary.digest)')
          echo "IMAGE_URI_DIGEST=${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.AR_REPO }}/${{ env.IMAGE_NAME }}@${DIGEST}" >> $GITHUB_ENV

      - name: Deploy to Cloud Run
        working-directory: .
        run: |
          gcloud run deploy "${{ env.SERVICE }}" \
            --region "${{ env.REGION }}" \
            --image "${IMAGE_URI_DIGEST}" \
            --platform managed \
            --allow-unauthenticated \
            --service-account "run-backend-sa@${{ env.PROJECT_ID }}.iam.gserviceaccount.com" \
            --add-cloudsql-instances "kodehaus-prod-474304:us-central1:pg-prod" \
            --memory 2Gi \
            --cpu 2 \
            --min-instances 0 \
            --max-instances 10 \
            --timeout 600 \
            --port 8080 \
            --set-env-vars "SPRING_DATASOURCE_DB=postgres,SPRING_DATASOURCE_USERNAME=postgres,SPRING_DATASOURCE_PASSWORD=Pr0d-ChangeMe!"

      - name: Verify deployment
        working-directory: .
        run: |
          SERVICE_URL=$(gcloud run services describe "${{ env.SERVICE }}" \
            --region "${{ env.REGION }}" \
            --format='value(status.url)')
          
          echo "üåê Backend URL: ${SERVICE_URL}"
          
          # Esperar que el servicio est√© listo
          echo "‚è≥ Esperando 45 segundos para que el servicio inicie..."
          sleep 45
          
          # Health check
          echo "üîç Verificando health check..."
          HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" "${SERVICE_URL}/actuator/health" || echo "000")
          
          if [ "$HTTP_CODE" -eq 200 ]; then
            echo "‚úÖ Backend health check passed!"
          else
            echo "‚ö†Ô∏è Health check returned HTTP ${HTTP_CODE}"
            echo "üìä Check logs at: https://console.cloud.google.com/run/detail/${{ env.REGION }}/${{ env.SERVICE }}/logs"
          fi

      - name: Display deployment info
        working-directory: .
        run: |
          SERVICE_URL=$(gcloud run services describe "${{ env.SERVICE }}" \
            --region "${{ env.REGION }}" \
            --format='value(status.url)')
          
          echo ""
          echo "üéâ =================================="
          echo "   Backend Deployed Successfully!"
          echo "   =================================="
          echo ""
          echo "üåê Backend URL: ${SERVICE_URL}"
          echo "üì¶ Image: ${IMAGE_URI_DIGEST}"
          echo "üóÑÔ∏è Database: postgres@kodehaus-prod-474304:us-central1:pg-prod"
          echo "üìä Logs: https://console.cloud.google.com/run/detail/${{ env.REGION }}/${{ env.SERVICE }}/logs"
          echo ""
          echo "üîó Test endpoints:"
          echo "   Health: ${SERVICE_URL}/actuator/health"
          echo "   Login:  ${SERVICE_URL}/api/auth/login"
          echo ""
